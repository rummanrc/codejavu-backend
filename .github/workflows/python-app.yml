# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "dev1.0" ]
  pull_request:
    branches: [ "dev1.0" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    services:
          db:
            image: postgres
            env:
              POSTGRES_USER: postgres
              POSTGRES_PASSWORD: password
              POSTGRES_DB: app
              POSTGRES_SERVER: db
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Set PYTHONPATH to env
      run: echo "PYTHONPATH=home/runner/work/codejavu-backend/backend/src" >> "$GITHUB_ENV"
    - name: Set POSTGRES_USER to env
      run: echo "POSTGRES_USER=postgres" >> "$GITHUB_ENV"
    - name: Set POSTGRES_PASSWORD to env
      run: echo "POSTGRES_PASSWORD=password" >> "$GITHUB_ENV"
    - name: Set POSTGRES_DB to env
      run: echo "POSTGRES_DB=app" >> "$GITHUB_ENV"
    - name: Set POSTGRES_SERVER to env
      run: echo "POSTGRES_SERVER=db" >> "$GITHUB_ENV"
    - name: Test test script
      run: |
        bash tests-start.sh  "$@" 
        
# name: CI

# on:
#   push:
#     branches:
#       - dev1.0
#   pull_request:
#     branches:
#       - dev1.0

# jobs:
#   build:
#     name: Build and Test
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: 'Create env file'
#         run: |
#           touch .env
#           echo "${{ secrets.ENV }}" >> .env
#           cat .env

#       - name: Run Test Script
#         run: sh ./scripts/test.sh

