# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
# permissions:
#   contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}/backend/src
      POSTGRES_HOST: localhost
      POSTGRES_SERVER: localhost
      POSTGRES_PORT: 5432
    services:
          db:
            image: postgres
            env:
              POSTGRES_USER: postgres
              POSTGRES_PASSWORD: password
              POSTGRES_DB: app
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
            ports:
              - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Create env file
      run: |
          touch .env
          echo "$(<fakenv.txt )" > .env
          cat .env
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Install Dependencies
      run: pip install -r ./backend/src/requirements.txt  
#     - name: Set PYTHONPATH to env
#       run: echo "${{ github.workspace }}/backend/src" >> "$GITHUB_PATH"
#       run: echo "PYTHONPATH='${PYTHONPATH}:${{ github.workspace }}/backend/src'    
    - name: Set POSTGRES_USER to env
      run: echo "POSTGRES_USER=postgres" >> "$GITHUB_ENV"
    - name: Set POSTGRES_PASSWORD to env
      run: echo "POSTGRES_PASSWORD=password" >> "$GITHUB_ENV"
    - name: Set POSTGRES_DB to env
      run: echo "POSTGRES_DB=app" >> "$GITHUB_ENV"
    - name: Set POSTGRES_SERVER to env
      run: echo "POSTGRES_SERVER=localhost" >> "$GITHUB_ENV"
    - name: Current directory
      run: pwd
    - name: See files and folders
      run: ls
    - name: Test test script
      run: |
        cd backend/src &&
        bash tests-start.sh "$@"

